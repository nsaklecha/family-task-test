@page "/manage-tasks"
@inherits ManageTasksBase

@inject HttpClient Http
@using FamilyTask.Components
@using FamilyTask.Shared.Components
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using AutoMapper

@if (isLoaded)
{
    <div class="page-wrapper row m-0 col-12 p-0">
        <div class="col-4 p-0">
            <LeftMenu MenuItems="@leftMenuItem" OnAddItem="@onAddItem" />
        </div>
        <div class="col-8 p-0">
            @if (showLister)
            {
                <div class="col-10 offset-1 pt-5">
                    <div class="row m-0">
                        <Field class="col-9 p-0 custom-input">
                            <TextEdit Placeholder="Enter New Task" @bind-Text="@taskstring" />
                        </Field>
                        <div class="col-3 p-0 text-right">
                            <Button class="add-btn px-4" Clicked="@addTask">Add</Button>
                        </div>
                    </div>
                </div>
                <div class="col-10 offset-1">
                    <TaskListerComponent Tasks="@tasksToShow" />
                </div>
            }
            @if (showCreator)
            {
                <div class="col-10 offset-1 pt-5">
                    <FamilyMemberCreator onAddCallback="@onMemberAdd" />
                </div>
            }
        </div>
    </div>
}

@code {

   //private FamilyMember[] members;
    //private MenuItem[] leftMenuItem;
    //private TaskModel[] tasksToShow;
    //private TaskModel[] allTasks;
    //private bool isLoaded;
    //private bool showLister;
    //private bool showCreator;
    //string taskstring = string.Empty;

    //protected override async Task OnInitializedAsync()
    //{
    //    members = await Http.GetFromJsonAsync<FamilyMember[]>("sample-data/family-members.json");
    //    allTasks = await Http.GetFromJsonAsync<TaskModel[]>("sample-data/tasks.json");

    //    leftMenuItem = new MenuItem[members.Length + 1];
    //    leftMenuItem[0] = new MenuItem
    //    {
    //        label = "All Tasks",
    //        referenceId = Guid.Empty,
    //        isActive = true
    //    };
    //    leftMenuItem[0].ClickCallback += showAllTasks;
    //    for (int i = 1; i < members.Length + 1; i++)
    //    {
    //        leftMenuItem[i] = new MenuItem
    //        {
    //            iconColor = members[i - 1].avtar,
    //            label = members[i - 1].firstname,
    //            referenceId = members[i - 1].id,
    //            isActive = false
    //        };
    //        leftMenuItem[i].ClickCallback += onItemClick;
    //    }
    //    showAllTasks(null, leftMenuItem[0]);
    //    isLoaded = true;
    //}

    //private void onAddItem()
    //{
    //    showLister = false;
    //    showCreator = true;
    //    makeMenuItemActive(null);
    //    StateHasChanged();
    //}

    //private async Task addTask()
    //{
    //    if (!string.IsNullOrEmpty(taskstring))
    //    {
    //        Guid memberid = Guid.Empty;
    //        for (int i = 0; i < leftMenuItem.Length; i++)
    //        {
    //            if (leftMenuItem[i].isActive)
    //            {
    //                memberid = leftMenuItem[i].referenceId;
    //            }
    //        }
    //        //var taskList = new TaskList { IsComplete = false, AssignedMemberId = memberid, Subject = taskstring };
    //        //await Http.PostAsJsonAsync("http://localhost:5000/api/task", taskList);
    //        //var taskDetail = new Domain.Commands.CreateTaskCommand { IsComplete = false, AssignedToId = memberid, Subject = taskstring };
    //        //await taskDataService.Create(taskDetail);
    //    }
    //}

    //private void onItemClick(object sender, object e)
    //{
    //    Guid val = (Guid)e.GetType().GetProperty("referenceId").GetValue(e);
    //    makeMenuItemActive(e);
    //    if (allTasks != null && allTasks.Length > 0)
    //    {
    //        tasksToShow = allTasks.Where(item =>
    //        {
    //            if (item.member != null)
    //            {
    //                return item.member.id == val;
    //            }
    //            else
    //            {
    //                return false;
    //            }
    //        }).ToArray();
    //    }
    //    showLister = true;
    //    showCreator = false;
    //    StateHasChanged();
    //}
    //private void showAllTasks(object sender, object e)
    //{
    //    tasksToShow = allTasks;
    //    showLister = true;
    //    showCreator = false;
    //    makeMenuItemActive(e);
    //    StateHasChanged();
    //}

    //private void makeMenuItemActive(object e)
    //{
    //    foreach (var item in leftMenuItem)
    //    {
    //        item.isActive = false;
    //    }
    //    if (e != null)
    //    {
    //        e.GetType().GetProperty("isActive").SetValue(e, true);
    //    }
    //}

    //private void onMemberAdd()
    //{
    //    Console.WriteLine("on member add");
    //}
}